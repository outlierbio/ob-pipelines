#
# This is an example Terraform file that spins up the complete ECS cluster
# Please use it if you need to spin up the separate ECS cluster withour connecting it to AWS Batch.
# For AWS Batch example please see batch.tf file in this folder
#

#locals {
#  name        = "ecs"
#  environment = "outlier-bio"
#
#  # This is the convention we use to know what belongs to each other
#  ec2_resources_name = "${local.name}-${local.environment}"
#}

#----- ECS --------
#module "ecs" {
#  source = "../modules/ecs"
#  name   = "${local.name}"
#}

#module "ecs-instance-profile" {
#  source = "../modules/ecs-instance-profile"
#  name   = "${local.name}"
#}

#----- ECS  Resources--------
# For now we only use the AWS ECS optimized ami <https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html>
#data "aws_ami" "amazon_linux_ecs" {
#  most_recent = true
#
#  filter {
#    name   = "name"
#    values = ["amzn-ami-*-amazon-ecs-optimized"]
#  }
#
#  filter {
#    name   = "owner-alias"
#    values = ["amazon"]
#  }
#}
#
#module "this" {
#  source = "../modules/aws-autoscaling"
#
#  name = "${local.ec2_resources_name}"
#
#  # Launch configuration
#  lc_name = "${local.ec2_resources_name}"
#  associate_public_ip_address = true
#  spot_price                  = 1.5
#
#  image_id             = "ami-644a431b" # "${data.aws_ami.amazon_linux_ecs.id}"
#  instance_type        = "c4.8xlarge"
#  security_groups      = [ "${module.sg.default}", "${module.sg.public_ssh}" ]
#  iam_instance_profile = "${module.ecs-instance-profile.this_iam_instance_profile_id}"
#  user_data            = "${data.template_file.user_data.rendered}"
#  key_name             = "${var.ssh_key_name}"
#
#  # Auto scaling group
#  asg_name                  = "${local.ec2_resources_name}"
#  vpc_zone_identifier       = "${module.vpc.public_subnets}"
#  health_check_type         = "EC2"
#  min_size                  = 0
#  max_size                  = 1
#  desired_capacity          = 0
#  wait_for_capacity_timeout = 0
#
#  tags = [{
#    key                 = "Environment"
#    value               = "${local.environment}"
#    propagate_at_launch = true
#  },
#  {
#    key                 = "Cluster"
#    value               = "${local.name}"
#    propagate_at_launch = true
#  }]
#}
#
#data "template_file" "user_data" {
#  template = "${file("${path.module}/ecs-templates/user-data.sh")}"
#
#  vars {
#    cluster_name = "${local.name}"
#  }
#}
